range R_UDP = 0..1

set Global_Alphabet = {packed,aligned,tcp,udp,header,payload}
set Controllable_Alphabet = {packed,aligned}

ALIGN = (packed -> PACKED | aligned-> ALIGNED),
ALIGNED = ({tcp,udp,header,payload}->ALIGNED),
PACKED = ({tcp,udp,header,payload}->PACKED).

SOCKET = DECIDE[0],
DECIDE[b:R_UDP] = ( tcp -> SEND[1] | udp -> SEND[0] ),
SEND[b:R_UDP] = ({header,payload}-> DECIDE[b] ).

DATA = (header -> PAYLOAD),
PAYLOAD = (payload -> DATA).

PLANT = S_0,
S_0 = (packed-> S_1|aligned-> S_2),
S_1 = (tcp-> S_10|udp-> S_11),
S_2 = (tcp-> S_3|udp-> S_4),
S_3 = (header-> S_9),
S_4 = (header-> S_5),
S_5 = (tcp-> S_6|udp-> S_7),
S_6 = (payload-> S_8),
S_7 = (payload-> S_2),
S_8 = (tcp-> S_3|udp-> S_4),
S_9 = (tcp-> S_6|udp-> S_7),
S_10 = (header-> S_16),
S_11 = (header-> S_12),
S_12 = (tcp-> S_13|udp-> S_14),
S_13 = (payload-> S_15),
S_14 = (payload-> S_1),
S_15 = (tcp-> S_10|udp-> S_11),
S_16 = (tcp-> S_13|udp-> S_14).

||ENV = (ALIGN || SOCKET || DATA).

vstate fluent F_TCP in PLANT = {S_3, S_6,S_10,S_13}.
vstate fluent F_GOAL in PLANT = {S_15}.

|gr1| <{F_TCP}><{F_GOAL}> STRAT = PLANT.

SOCKET >> "/tmp/packet_motivating_example_socket.rep".
ENV >> "/tmp/packet_motivating_example_env.rep".
//GAME >> "/tmp/motivating_example_game.rep".
STRAT >> "/tmp/motivating_example_strat.rep".
/*
fluent F_NotCooking = <{finishedCooking,overHeated}, cook> initially 1
fluent F_MoveToBelt = <moveToBelt, cook>

SUCCESSFULLY_COOKED_TWICE = (cook->cook->COOKED),
COOKED = (moveToBelt->SUCCESSFULLY_COOKED_TWICE | cook->ERROR).
|| ENV =(BISCOTTI || SUCCESSFULLY_COOKED_TWICE). 
|f| ENV_G =(BISCOTTI || SUCCESSFULLY_COOKED_TWICE).
|F| NO_MIXED_ENV = (ENV).

|gr1| <{F_NotCooking}><{F_MoveToBelt}> FAILED_STRAT = ENV_G.
|gr1| <{F_NotCooking}><{F_MoveToBelt}> STRAT = NO_MIXED_ENV.

P_STRAT = (cook -> STRAT_p_1),
STRAT_p_1 = (cooking -> STRAT_p_1 | finishedCooking -> STRAT_p_2),
STRAT_p_2 = (cook -> STRAT_p_3),
STRAT_p_3 = (cooking -> STRAT_p_3 | finishedCooking -> STRAT_p_4),
STRAT_p_4 = (moveToBelt -> cook-> STRAT_p_1).

// tests
equals FATAL_Biscotti_Strategy(STRAT, P_STRAT).
equals FAIL_Biscotti_Strategy(FAILED_STRAT, P_STRAT).

ENV_G >> "/tmp/biscotti_ENV_G.rep".
NO_MIXED_ENV >> "/tmp/biscotti_ENV_G_no_mixed.rep".
FAILED_STRAT >> "/tmp/biscotti_failed_strat.rep".
STRAT >> "/tmp/biscotti_strat.rep".
STRAT_p >> "/tmp/biscotti_strat_p.rep".
*/
