//GenBuf example taken from Synthesis of Reactive(1) Designs 3 senders
set Global_Alphabet = {}
set Controllable_Alphabet = {}

set Global_Signals	= {sREQ0, sREQ1, sREQ2, sREQ3, bACK0, bACK1, bACK2, bACK3, bREQ0, bREQ1, rACK0, rACK1, enq, deq, full, empty, slc0, slc1, s0, g0, g1, g2,g3,t,a0,a1}
set Output_Signals	= {bACK0, bACK1, bACK2, bACK3, bREQ0, bREQ1, enq, deq, slc0, slc1, s0, g0, g1, g2,g3,t}
//order			= {s0 < sREQ0 < sREQ1 < sREQ_2 < sREQ_3 < rACK0 < rACK1 < full < empty < bACK0 < bACK1 < bACK_2 < bACK_3 < bREQ0 < bREQ1 < enq < deq < slc0}
order 				= {}
/***********
**** THETA
***********/
ltl env theta Init_Buffer_e in GENBUF	= (!sREQ0 && !sREQ1 && !sREQ2 && !sREQ3 && !rACK0 && !rACK1 && !full && empty && !a0 && !a1).
ltl sys theta Init_Buffer_s in GENBUF	= (!bACK0 && !bACK1 && !bACK2 && !bACK3 && !bREQ0 && !bREQ1 && !enq && !deq && !slc0 && !s0 && !slc0 && !slc1 && !g0 && !g1 && !g2 && !g3 && !t).
/***********
**** SYS RHO
***********/
ltl sys rho G_1_sndr_0_g_g in GENBUF		= []((!g0 && !(sREQ0 && !bACK0))->(X(!g0))).
ltl sys rho G_1_sndr_0_g_g1 in GENBUF		= []((!g0 && sREQ0 && !bACK0)->(X(g0))).
ltl sys rho G_1_sndr_0_g1_g1 in GENBUF		= []((g0 && !bACK0)->(X(g0))).
ltl sys rho G_1_sndr_0_g1_g in GENBUF		= []((g0 && bACK0)->(X(!g0))).
ltl sys rho G_1_sndr_1_g_g in GENBUF		= []((!g1 && !(sREQ1 && !bACK1))->(X(!g1))).
ltl sys rho G_1_sndr_1_g_g1 in GENBUF		= []((!g1 && sREQ1 && !bACK1)->(X(g1))).
ltl sys rho G_1_sndr_1_g1_g1 in GENBUF		= []((g1 && !bACK1)->(X(g1))).
ltl sys rho G_1_sndr_1_g1_g in GENBUF		= []((g1 && bACK1)->(X(!g1))).
ltl sys rho G_1_sndr_2_g_g in GENBUF		= []((!g2 && !(sREQ2 && !bACK2))->(X(!g2))).
ltl sys rho G_1_sndr_2_g_g1 in GENBUF		= []((!g2 && sREQ2 && !bACK2)->(X(g2))).
ltl sys rho G_1_sndr_2_g1_g1 in GENBUF		= []((g2 && !bACK2)->(X(g2))).
ltl sys rho G_1_sndr_2_g1_g in GENBUF		= []((g2 && bACK2)->(X(!g2))).
ltl sys rho G_1_sndr_3_g_g in GENBUF		= []((!g3 && !(sREQ3 && !bACK3))->(X(!g3))).
ltl sys rho G_1_sndr_3_g_g1 in GENBUF		= []((!g3 && sREQ3 && !bACK3)->(X(g3))).
ltl sys rho G_1_sndr_3_g1_g1 in GENBUF		= []((g3 && !bACK3)->(X(g3))).
ltl sys rho G_1_sndr_3_g1_g in GENBUF		= []((g3 && bACK3)->(X(!g3))).
//sToB_REQ then not bToS_ACK
ltl sys rho G_2_sndr_0 in GENBUF		= []((!sREQ0 && X(sREQ0)) -> (X(!bACK0))).
ltl sys rho G_2_b_sndr_0 in GENBUF		= []((!bACK0 && !sREQ0) -> (X(!bACK0))).
ltl sys rho G_2_sndr_1 in GENBUF		= []((!sREQ1 && X(sREQ1)) -> (X(!bACK1))).
ltl sys rho G_2_b_sndr_1 in GENBUF		= []((!bACK1 && !sREQ1) -> (X(!bACK1))).
ltl sys rho G_2_sndr_2 in GENBUF		= []((!sREQ2 && X(sREQ2)) -> (X(!bACK2))).
ltl sys rho G_2_b_sndr_2 in GENBUF		= []((!bACK2 && !sREQ2) -> (X(!bACK2))).
ltl sys rho G_3_sndr_2 in GENBUF		= []((!sREQ3 && X(sREQ3)) -> (X(!bACK3))).
ltl sys rho G_3_b_sndr_2 in GENBUF		= []((!bACK3 && !sREQ3) -> (X(!bACK3))).
//bACK only if sREQ
ltl sys rho G_3_sndr0 in GENBUF		= []((!bACK0 && X(bACK0)) -> sREQ0).
ltl sys rho G_3_sndr1 in GENBUF		= []((!bACK1 && X(bACK1)) -> sREQ1).
ltl sys rho G_3_sndr2 in GENBUF		= []((!bACK2 && X(bACK2)) -> sREQ2).
ltl sys rho G_3_sndr3 in GENBUF		= []((!bACK3 && X(bACK3)) -> sREQ3).
//keep bACK up if sREQ still going
ltl sys rho G_4_sndr0 in GENBUF		= []((bACK0 && sREQ0) -> X(bACK0)).
ltl sys rho G_4_sndr1 in GENBUF		= []((bACK1 && sREQ1) -> X(bACK1)).
ltl sys rho G_4_sndr2 in GENBUF		= []((bACK2 && sREQ2) -> X(bACK2)).
ltl sys rho G_4_sndr3 in GENBUF		= []((bACK3 && sREQ3) -> X(bACK3)).
//mutex bACK
ltl sys rho G_5 in GENBUF			= []((!(bACK0 && bACK1))).
ltl sys rho G_5_X in GENBUF			= [](X((!(bACK0 && bACK1)))).
//mutex bREQ
ltl sys rho G_5_b1_rcvr0 in GENBUF		= [](!(bREQ0 && bREQ1)).
ltl sys rho G_5_b1_rcvr0 in GENBUF		= [](X(!(bREQ0 && bREQ1))).
//keep bREQ if not yet ack
ltl sys rho G_61_rcvr0 in GENBUF		= []((bREQ0 && !rACK0) -> X(bREQ0)).
ltl sys rho G_61_rcvr1 in GENBUF		= []((bREQ1 && !rACK1) -> X(bREQ1)).
//serving receivers in round robin fashion 
ltl sys rho G_701 in GENBUF				= []((!s0 && bREQ0) -> X(s0)).//advance state
ltl sys rho G_70_2 in GENBUF				= []((!s0 && !bREQ0) -> X(!s0)).//keep state
//ltl sys rho G_70_3 in GENBUF				= []((!s0) -> (!bREQ1)).//restrict
//ltl sys rho G_70_4 in GENBUF				= [](X((!s0) -> (!bREQ1))).//restrict X
ltl sys rho G_711 in GENBUF				= []((s0 && bREQ1) -> X(!s0)).
ltl sys rho G_71_2 in GENBUF				= []((s0 && !bREQ1) -> X(s0)).
//ltl sys rho G_71_3 in GENBUF				= []((s0) -> (!bREQ0)).
//ltl sys rho G_71_4 in GENBUF				= [](X((s0) -> (!bREQ0))).
//lower bREQ when rACK received
ltl sys rho G_8_rcvr0 in GENBUF		= [](rACK0 -> X(!bREQ0)).
ltl sys rho G_8_rcvr1 in GENBUF		= [](rACK1 -> X(!bREQ1)).
//bACK raises iff enq
ltl sys rho G_9_1 in GENBUF			= [](X(enq) <-> ((!bACK0 && X(bACK0)) || (!bACK1 && X(bACK1)) || (!bACK2 && X(bACK2)) || (!bACK3 && X(bACK3)) )).
//update slc accordingly
ltl sys rho G_9_2 in GENBUF			= [](((!bACK0 && X(bACK0)) -> (!X(slc0) && !X(slc1))) && ((!bACK1 && X(bACK1)) -> (X(slc0) && !X(slc1))) && ((!bACK2 && X(bACK2)) -> (!X(slc0) && X(slc1))) && ((!bACK3 && X(bACK3)) -> (X(slc0) && X(slc1)))).
//only deq if rACK'd
ltl sys rho G10 in GENBUF			= [](X(deq) ->	((!X(rACK0) && rACK0)	||	(!X(rACK1) && rACK1))).
//restrict eng/deq operations
ltl sys rho G111 in GENBUF			= []((full && !deq)-> !enq).
ltl sys rho G111_X in GENBUF			= [](X((full && !deq)-> !enq)).
ltl sys rho G11_2 in GENBUF			= [](empty-> !deq).
ltl sys rho G11_2_X in GENBUF			= [](X(empty-> !deq)).
ltl sys rho G_12_t0_t0 in GENBUF		= []((!t && X(empty || deq))->(X(!t))).
ltl sys rho G_12_t0_t1 in GENBUF		= []((!t && X(!empty && !deq))->(X(t))).
ltl sys rho G_12_t1_t1 in GENBUF		= []((t && X(!deq))->(X(t))).
ltl sys rho G_12_t1_t0 in GENBUF		= []((t && X(deq))->(X(!t))).

//if sREQ and not full then should ENQ
ltl sys rho G13 in GENBUF			= []((!full && (sREQ0 || sREQ1 || sREQ2)) -> (enq || X(enq))).

/***********
**** ENV RHO
***********/

//keep sREQ if not yet ACK'd
ltl env rho A11_sndr0 in GENBUF		= []((sREQ0 && !bACK0) -> X(sREQ0)).
ltl env rho A11_sndr1 in GENBUF		= []((sREQ1 && !bACK1) -> X(sREQ1)).
ltl env rho A11_sndr2 in GENBUF		= []((sREQ2 && !bACK2) -> X(sREQ2)).
ltl env rho A11_sndr3 in GENBUF		= []((sREQ3 && !bACK3) -> X(sREQ3)).
//lower sREQ once ACK'd
ltl env rho A1_2_sndr0 in GENBUF		= [](bACK0 -> X(!sREQ0)).
ltl env rho A1_2_sndr1 in GENBUF		= [](bACK1 -> X(!sREQ1)).
ltl env rho A1_2_sndr2 in GENBUF		= [](bACK2 -> X(!sREQ2)).
ltl env rho A1_2_sndr3 in GENBUF		= [](bACK3 -> X(!sREQ3)).
//keep sToB_REQ if not yet ACK'd
ltl env rho A_2_sndr_0_a0_a0 in GENBUF		= []((!a0 && !((bREQ0) && !rACK0))->(X(!a0))).
ltl env rho A_2_sndr_0_a0_a1 in GENBUF		= []((!a0 && (bREQ0) && !rACK0)->(X(a0))).
ltl env rho A_2_sndr_0_a1_a1 in GENBUF		= []((a0 && !((rACK0)))->(X(a0))).
ltl env rho A_2_sndr_0_a1_a0 in GENBUF		= []((a0 && (rACK0))->(X(!a0))).
ltl env rho A_2_sndr_1_a0_a0 in GENBUF		= []((!a1 && !((bREQ1) && !rACK1))->(X(!a1))).
ltl env rho A_2_sndr_1_a0_a1 in GENBUF		= []((!a1 && (bREQ1) && !rACK1)->(X(a1))).
ltl env rho A_2_sndr_1_a1_a1 in GENBUF		= []((a1 && !((rACK1)))->(X(a1))).
ltl env rho A_2_sndr_1_a1_a0 in GENBUF		= []((a1 && (rACK1))->(X(!a1))).
//lower rACK if no bREQ
ltl env rho A_2_2_sndr0 in GENBUF		= []((!bREQ0) -> X(!rACK0)).
ltl env rho A_2_2_sndr1 in GENBUF		= []((!bREQ1) -> X(!rACK1)).
//keep rACK if still REQ's
ltl env rho A_3_rcvr0 in GENBUF		= []((bREQ0 && rACK0) -> X(rACK0)).
ltl env rho A_3_rcvr1 in GENBUF		= []((bREQ1 && rACK1) -> X(rACK1)).
//rACK if REQ'd
ltl env rho A_4_rcvr0 in GENBUF		= [](X(rACK0) -> bREQ0).
ltl env rho A_4_rcvr1 in GENBUF		= [](X(rACK1) -> bREQ1).
//keep empty / full fixed if deq == enq
ltl env rho A_51 in GENBUF			= []((deq <-> enq) -> (empty <-> X(empty))).
ltl env rho A_5_2 in GENBUF			= []((deq <-> enq) -> (full <-> X(full))).
ltl env rho A_5_3 in GENBUF			= []((enq && !deq) -> !X(empty)).
ltl env rho A_5_4 in GENBUF			= []((deq && !enq) -> !X(full)).

/***********
**** FLUENTS
***********/
ltl fluent A_rcvr_0		= (!a0).
ltl fluent A_rcvr_0_b		= (a0 || empty).
ltl fluent A_rcvr_1		= (!a1).
ltl fluent A_rcvr_1_b		= (a1 || empty).
//ltl fluent G_bREQ0		= (bREQ0).
ltl fluent G_1_2_sndr_0		= (!g0).
ltl fluent G_1_2_sndr_1		= (!g1).
ltl fluent G_1_2_sndr_2		= (!g2).
ltl fluent G_1_2_sndr_3		= (!g3).
ltl fluent G_True		= (bREQ0 || !bREQ0).
ltl fluent G_12				= (!t).
ltl fluent G_7				= (empty || deq).
/***********
**** SYNTHESIS
***********/
|f| ENV =(GENBUF).
|gr1| <{A_rcvr_0, A_rcvr_0_b,A_rcvr_1, A_rcvr_1_b}><{G_1_2_sndr_0,G_1_2_sndr_1,G_1_2_sndr_2,G_1_2_sndr_3, G_12,G_7}> STRAT = ENV.
