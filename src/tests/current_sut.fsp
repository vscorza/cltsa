//GenBuf example taken from Synthesis of Reactive(1) Designs 2 senders
set Global_Alphabet = {}
set Controllable_Alphabet = {}

set Global_Signals	= {bToR_REQ_0, bToR_REQ_1, s_0}
set Output_Signals	= {bToR_REQ_0, bToR_REQ_1, s_0}
order 				= {}
/***********
**** THETA
***********/
//ltl env theta Init_Buffer_e in GENBUF	= (!sToB_REQ_0 && !sToB_REQ_1 && !rToB_ACK_0 && !rToB_ACK_1 && !a_0 && !a_1 && !full && empty).
ltl sys theta Init_Buffer_s in GENBUF	= (!bToR_REQ_0 && !bToR_REQ_1 && !s_0).
/***********
**** SYS RHO
***********/
//serving receivers in round robin fashion
ltl sys rho G_7_mutex in GENBUF				= [](!(bToR_REQ_0 && bToR_REQ_1)). 
ltl sys rho G_7_0_1 in GENBUF				= []((!s_0 && bToR_REQ_0 && X(!bToR_REQ_0)) -> X(s_0)).//advance state
ltl sys rho G_7_0_2 in GENBUF				= []((!s_0 && !(bToR_REQ_0 && X(!bToR_REQ_0))) -> X(!s_0)).//keep state
ltl sys rho G_7_0_3 in GENBUF				= []((!s_0) -> (!bToR_REQ_1)).//restrict
ltl sys rho G_7_0_1 in GENBUF				= []((s_0 && bToR_REQ_1 && X(!bToR_REQ_1)) -> X(!s_0)).//advance state
ltl sys rho G_7_0_2 in GENBUF				= []((s_0 && !(bToR_REQ_1 && X(!bToR_REQ_1))) -> X(s_0)).//keep state
ltl sys rho G_7_1_3 in GENBUF				= []((s_0) -> (!bToR_REQ_0)).

/***********
**** ENV RHO
***********/
//A1
/***********
**** FLUENTS
***********/
//G_12 was turned into a fluent
//fluent A_2_sndr_0 = <rToB_ACK_0.on, bToR_REQ_0.on> initially 1
//fluent A_2_sndr_1 = <rToB_ACK_1.on, bToR_REQ_1.on> initially 1

ltl fluent A_1		= (!s_0 || s_0).

ltl fluent G_7				= (!s_0).
/***********
**** SYNTHESIS
***********/
|f| ENV =(GENBUF).
|gr1| <{A_1}><{G_7}> STRAT = ENV.
