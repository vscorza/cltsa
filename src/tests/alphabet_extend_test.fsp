set Global_Alphabet = {a.on, a.off, b.on, b.off, y.on, y.off}
set Controllable_Alphabet = {y.on, y.off}
Y_BEH = ( {y.on, y.off} -> DONE).
A_BEH = (a.on -> a.off -> A_BEH)+{y.on, y.off}.
B_BEH = ( b.on -> B_ON_BEH),
B_ON_BEH = (b.off -> B_BEH | {a.on, a.off} -> b.off -> B_BEH)+{y.on, y.off}.
||ENV = (A_BEH || B_BEH || Y_BEH).
A_BEH >> "/tmp/motivating_example_a.rep".
B_BEH >> "/tmp/motivating_example_b.rep".
Y_BEH >> "/tmp/motivating_example_y.rep".
ENV >> "/tmp/motivating_example_env.rep".

ENV_P = S_0,
S_0 = (b.on-> S_1),
S_1 = (b.off-> S_0|a.on-> S_2),
S_2 = (b.off-> S_3),
S_3 = (b.on-> S_4),
S_4 = (b.off-> S_3|a.off-> S_5),
S_5 = (b.off-> S_0).

equals EXTEND_ALPHABET_TEST(ENV, ENV_P).