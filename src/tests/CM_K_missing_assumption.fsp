const K = ${K}
const  Areas = 2*K + 1
const  Init = 0
const  Last = Areas  - 1
const  Center = K
range R_Area = Init..Last
range R_K = 0..(K-1)
range R_Bool = 0..1

set Global_Alphabet = {mouse_move[k:R_K][r:R_Area], cat_move[k:R_K][r:R_Area],rotting[k:R_K]}
set Controllable_Alphabet = {mouse_move[k:R_K][r:R_Area],rotting[k:R_K]}



/*****************************************************************************/

Mouse[id:R_K] = Act[Areas -1][0],
Act[a:R_Area][eaten:R_Bool] = (
	when(eaten == 0) cat_move[r:R_K][c:R_Area] ->Act[a][((a == c) * (c != Center))] |
	when(eaten == 1) cat_move[r:R_K][c:R_Area] ->Act[a][1] |
	when (eaten == 0) mouse_move[id][a] -> Act[a][eaten] |
	when ((eaten == 0)* ((a+1)  <= Last)) mouse_move[id][a+1]  -> Act[a+1][eaten] |
	when ((eaten == 0)* ((a-1)  >= Init)) mouse_move[id][a-1]  -> Act[a-1][eaten] |
	when(eaten == 1) rotting[id] -> Act[a][eaten])+{mouse_move[id][a:R_Area]}.

Cat[id:R_K] = Act[0],
Act[a:R_Area] = (cat_move[id][a] -> Act[a] |
	when ((a+1)  <= Last) cat_move[id][a+1]  -> Act[a+1] |
	when ((a-1) >= Init) cat_move[id][a-1]  -> Act[a-1] )+{cat_move[id][a:R_Area]}.

ARBITER = MOUSE_TURN[0],
MOUSE_TURN[k:R_K] = (when (k < (K-1)){mouse_move[k][r:R_Area],rotting[k]} -> MOUSE_TURN[k+1] | when(k == (K-1)) {mouse_move[k][r:R_Area],rotting[k]} -> CAT_TURN[0]),
CAT_TURN[k:R_K] = ( when (k < (K-1))cat_move[k][r:R_Area] -> CAT_TURN[k+1] | when(k == (K-1)) cat_move[k][r:R_Area] -> MOUSE_TURN[0]).

//*****************************************************************************

||Plant = (Mouse[m:R_K] || Cat[c:R_K]  || ARBITER).

|F| ENV = (Plant).

fluent A_No_Ass[id:R_K] = <cat_move[id][0], cat_move[id][1]>
fluent G_CAT[id:R_K] = <cat_move[id][Center], {cat_move[id][Center-1],cat_move[id][Center+1]}>
fluent G_MOUSE[id:R_K] = <mouse_move[id][Center], {mouse_move[id][Center-1],mouse_move[id][Center+1],rotting[id]}>



|gr1| <{A_No_Ass[id:R_K]}><{G_CAT[c:R_K], G_MOUSE[m:R_K]}>  NO_STRAT = ENV.

