// alphabets def.
set Global_Alphabet = {a,b,c,d,e,f,g}
set Controllable_Alphabet = {a,b}

// automata def.
A = (<a,b> -> e -> A ).
B = ( c -> e ->B).
C = (<f,g> -> e -> C ).

|f| ASYNCHRONOUS = (A || B || C).
|f| CONCURRENT = (A ||_c B ||_c C).
|f| SYNCHRONOUS = (A ||_s B ||_s C).

//|f| CONCURRENT = (A ||_c B).
//|f| CONCURRENT = (A ||_c C).
//|f| CONCURRENT = (C ||_c B).
//|f| CONCURRENT = (B ||_c A).
//|f| CONCURRENT = (A ||_c A).
//|f| CONCURRENT = (C ||_c B).
//|f| CONCURRENT = (A ||_c B ||_c C).

SYNCH_p = (<a,b,c,f,g> -> e -> SYNCH_p).

ASYNCH_p = (<f,g> -> ASYNCH_p_3 |c -> ASYNCH_p_2 |<a,b> -> ASYNCH_p_1),
ASYNCH_p_1 = (<f,g> -> ASYNCH_p_4 | c -> ASYNCH_p_7),
ASYNCH_p_2 = (<a,b> -> ASYNCH_p_7 | <f,g> -> ASYNCH_p_5),
ASYNCH_p_3 = (<a,b> -> ASYNCH_p_4 | c -> ASYNCH_p_5),
ASYNCH_p_4 = (c -> ASYNCH_p_6),
ASYNCH_p_5 = (<a,b> -> ASYNCH_p_6),
ASYNCH_p_6 = (e -> ASYNCH_p),
ASYNCH_p_7 = (<f,g> -> ASYNCH_p).

CONC_p = (<f,g> -> CONC_p_5 | <c,f,g> -> CONC_p_6 | c -> CONC_p_3| <a,b,c> -> CONC_p_2
	| <a,b> -> CONC_p_1 | <a,b,f,g> -> CONC_p_7| <a,b,c,f,g> -> CONC_p_4),
CONC_p_1 = (<f,g> -> CONC_p_7 | c -> CONC_p_2 | <c,f,g> -> CONC_p_4),
CONC_p_2 = (<f,g> -> CONC_p_4),
CONC_p_3 = (<f,g> -> CONC_p_6 | <a,b> -> CONC_p_2| <a,b,f,g> -> CONC_p_4),
CONC_p_4 = (e -> CONC_p),
CONC_p_5 = (<a,b,c> -> CONC_p_4 | <a,b> -> CONC_p_7 | c -> CONC_p_6),
CONC_p_6 = (<a,b> -> CONC_p_4),
CONC_p_7 = (c -> CONC_p_4).

// tests
equals FATAL_Synch_Composition(SYNCHRONOUS, SYNCH_p).
equals FATAL_Asynch_Composition(ASYNCHRONOUS, ASYNCH_p).
equals FATAL_Conc_Composition(CONCURRENT, CONC_p).
