// alphabets def.
set Global_Alphabet = {a,b,c,d,e,f,g}
set Controllable_Alphabet = {a,b}

// automata def.
A = (<a,b> -> e -> A ).
B = ( c -> e ->B).
C = (<f,g> -> e -> C ).

|f| ASYNCHRONOUS = (A || B || C).
|f| CONCURRENT = (A ||_c B ||_c C).
|f| SYNCHRONOUS = (A ||_s B ||_s C).


SYNCH_p = (<a,b,c,f,g> -> e -> SYNCH_p).

ASYNCH_p = (<f,g> -> ASYNCH_p_3 |c -> ASYNCH_p_2 |<a,b> -> ASYNCH_p_1),
ASYNCH_p_1 = (<f,g> -> ASYNCH_p_4 | c -> ASYNCH_p_7),
ASYNCH_p_2 = (<a,b> -> ASYNCH_p_7 | <f,g> -> ASYNCH_p_5),
ASYNCH_p_3 = (<a,b> -> ASYNCH_p_4 | c -> ASYNCH_p_5),
ASYNCH_p_4 = (c -> ASYNCH_p_6),
ASYNCH_p_5 = (<a,b> -> ASYNCH_p_6),
ASYNCH_p_6 = (e -> ASYNCH_p),
ASYNCH_p_7 = (<f,g> -> ASYNCH_p_6).

CONC_p = S_0,
S_0 = (<f,g>-> S_1|c-> S_2|<c,f,g>-> S_3|<a,b>-> S_4|<a,b,f,g>-> S_5|<a,b,c>-> S_6|<a,b,c,f,g>-> S_7),
S_1 = (c-> S_3|<a,b>-> S_5|<a,b,c>-> S_7),
S_2 = (<f,g>-> S_3|<a,b>-> S_6|<a,b,f,g>-> S_7),
S_3 = (<a,b>-> S_7),
S_4 = (<f,g>-> S_5|c-> S_6|<c,f,g>-> S_7),
S_5 = (c-> S_7),
S_6 = (<f,g>-> S_7),
S_7 = (e-> S_0).
A >> "/tmp/compositiion_types_a.rep".
CONCURRENT >> "/tmp/compositiion_types_concurrent.rep".
SYNCHRONOUS >> "/tmp/compositiion_types_synch.rep".
ASYNCHRONOUS >> "/tmp/compositiion_types_asynch.rep".

// tests
equals FATAL_Synch_Composition(SYNCHRONOUS, SYNCH_p).
equals FATAL_Asynch_Composition(ASYNCHRONOUS, ASYNCH_p).
equals FATAL_Conc_Composition(CONCURRENT, CONC_p).
