set Global_Alphabet = {cook, finishedCooking, cooking, moveToBelt, overHeated}
set Controllable_Alphabet = {cook, moveToBelt}

BISCOTTI = (cook->COOKING),
COOKING = (cooking->COOKING | finishedCooking->FINISHED | <cook,finishedCooking>->OVERHEATED), 
FINISHED = (cook->COOKING | moveToBelt->BISCOTTI),  
OVERHEATED = (overHeated->OVERHEATED).

vstate fluent F_NotCooking in BISCOTTI = {FINISHED, OVERHEATED}.
vstate fluent F_MoveToBelt in BISCOTTI = {BISCOTTI}.

SUCCESSFULLY_COOKED_TWICE = (cook->cook->COOKED),
COOKED = (moveToBelt->SUCCESSFULLY_COOKED_TWICE | cook->ERROR).
|| ENV =(BISCOTTI || SUCCESSFULLY_COOKED_TWICE). 
|f| ENV_G =(BISCOTTI || SUCCESSFULLY_COOKED_TWICE).

|gr1| <{F_NotCooking}><{F_MoveToBelt}> STRAT = ENV_G.

STRAT_p = S_0,
S_0 = (cook-> S_1),
S_1 = (cooking-> S_1|<cook,finishedCooking>-> S_2),
S_2 = (overHeated-> S_2).

// tests
equals FATAL_Biscotti_Strategy_Vstates(STRAT, STRAT_p).

ENV_G >> "/tmp/biscotti_ENV_G.rep".
STRAT >> "/tmp/biscotti_strat.rep".
STRAT_p >> "/tmp/biscotti_strat_p.rep".
