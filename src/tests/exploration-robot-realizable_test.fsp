
//GenBuf example taken from Synthesis of Reactive(1) Designs 2 senders
set Global_Alphabet = {n,s,e,w,load,unload,drop,correct,bCast}
set Controllable_Alphabet = {n,s,e,w}

set Global_Signals	= {Dummy}
order 				= {}
const Min = 1 //this must always be odd
const Max = 4
range Pos = Min..Max
const MaxError	= 3
range ErrorLimit	= 1..MaxError

//Concrete
MAZE = M[Min][Min], 
M[r:Pos][c:Pos] = ( 
				when((r < (Max - 1)) + ((r < Max) * (c < Max))  ) s->M[r+1][c]
				| when((c < (Max - 1)) + ((c < Max) * (r < Max))  ) e->M[r][c+1]
				| when((r > (Min + 1)) + ((r > Min) * (c > Min))) n->M[r-1][c]
				| when((c > (Min +1)) + ((c > Min) * (r > Min))) w->M[r][c-1]
				| when((r == (Max - 1)) * (c == Max) ) s->M_max
				| when((c == (Max - 1)) * (r == Max)) e->M_max
				| when((r == (Min + 1)) * (c == Min)) n->M_min
				| when((c == (Min + 1) )*  (r == Min)) w->M_min
),
M_max = (unload->M[Max][Max]),
M_min = (drop -> M_min | load->M[Min][Min]).

ARM = ({n,s,e,w}->ARM | drop ->KEEP_TRYING | load->JUST_LOADED),
KEEP_TRYING = (drop->KEEP_TRYING | load ->JUST_LOADED),
JUST_LOADED = ({n,s,e,w}->LOADED),
LOADED = ({n,s,e,w}->LOADED | unload->JUST_UNLOADED),
JUST_UNLOADED = ({n,s,e,w}->ARM).

LOCALIZER = L_B[1],
L[e:ErrorLimit]	= (when(e < MaxError) {n,s,w,e,drop,load,unload} -> L_B[e+1]
		| when(e == MaxError) {n,s,w,e,drop,load,unload} -> L_error),
L_B[e:ErrorLimit]	= (bCast -> L[e] | correct -> L[1]),
L_error	= ({n,s,w,e,drop,load,unload} -> L_error).

//||C = (MAZE ||_c ARM).
|f|PLANT = (MAZE ||_c  LOCALIZER).
//||T = (MAZE ||_c LOCALIZER).
||A_ARM_LOCALIZER = (ARM ||_c LOCALIZER).
||A_MAZE_LOCALIZER = (LOCALIZER ||_c MAZE).
||A_MAZE_ARM = (ARM ||_c MAZE).

fluent F_Load = <load, {unload,n,s,e,w,drop,correct,bCast}>
fluent F_Unload = <unload, {load,n,s,e,w,drop,correct,bCast}>
fluent F_Dont_Drop = <load, drop> initially 1
fluent F_Broadcast = <bCast,{unload,load,n,s,e,w,stall,correct}> initially 1
|gr1| <{F_Dont_Drop, F_Broadcast}><{F_Load, F_Unload, F_Broadcast}> STRAT = PLANT.


A_ARM_LOCALIZER >> "/tmp/exploration_robot_realizable_arm_localizer.rep".
A_MAZE_LOCALIZER >> "/tmp/exploration_robot_realizable_maze_localizer.rep".
A_MAZE_ARM >> "/tmp/exploration_robot_realizable_maze_arm.rep".
MAZE >> "/tmp/exploration_robot_realizable_maze.rep".
ARM >> "/tmp/exploration_robot_realizable_arm.rep".
LOCALIZER >> "/tmp/exploration_robot_realizable_localizer.rep".
PLANT >> "/tmp/exploration_robot_realizable_plant.rep".
STRAT >> "/tmp/exploration_robot_realizable_strat.rep".

STRAT_p = S_0,
S_0 = (bCast-> S_1|correct-> S_2),
S_1 = (e-> S_4),
S_2 = (e-> S_3),
S_3 = (bCast-> S_8|correct-> S_9),
S_4 = (bCast-> S_155|correct-> S_156),
S_8 = (w-> S_11),
S_9 = (w-> S_12),
S_11 = (bCast-> S_237|correct-> S_165),
S_12 = (bCast-> S_19|correct-> S_20),
S_19 = (drop-> S_22|load-> S_24),
S_20 = (drop-> S_25|load-> S_26),
S_22 = (bCast-> S_142|correct-> S_143),
S_24 = (bCast-> S_236|correct-> S_171),
S_25 = (bCast-> S_27|correct-> S_28),
S_26 = (bCast-> S_29|correct-> S_2),
S_27 = (drop-> S_22|load-> S_24),
S_28 = (drop-> S_25|load-> S_26),
S_29 = (e-> S_31),
S_31 = (bCast-> S_173|correct-> S_156),
S_36 = (drop-> S_174|load-> S_147),
S_48 = (e-> S_49),
S_49 = (unload-> S_54),
S_54 = (w-> S_48),
S_58 = (bCast-> S_172|correct-> S_154),
S_66 = (bCast-> S_234|correct-> S_183),
S_75 = (bCast-> S_76|correct-> S_77),
S_76 = (w-> S_132),
S_77 = (e-> S_109),
S_108 = (unload-> S_130),
S_109 = (bCast-> S_110|correct-> S_111),
S_110 = (unload-> S_113),
S_111 = (unload-> S_114),
S_113 = (bCast-> S_226|correct-> S_224),
S_114 = (bCast-> S_115|correct-> S_116),
S_115 = (w-> S_118),
S_116 = (w-> S_75),
S_118 = (bCast-> S_225|correct-> S_198),
S_120 = (w-> S_121),
S_121 = (e-> S_108),
S_125 = (n-> S_36),
S_130 = (w-> S_121),
S_132 = (bCast-> S_231|correct-> S_192),
S_134 = (n-> S_136),
S_136 = (n-> S_125),
S_138 = (bCast-> S_233|correct-> S_186),
S_142 = (drop-> S_146|load-> S_147),
S_143 = (drop-> S_166|load-> S_167),
S_146 = (drop-> S_146|load-> S_147),
S_147 = (e-> S_175),
S_152 = (bCast-> S_153|correct-> S_154),
S_153 = (n-> S_11),
S_154 = (n-> S_157),
S_155 = (w-> S_11),
S_156 = (w-> S_157),
S_157 = (bCast-> S_164|correct-> S_165),
S_164 = (drop-> S_22|load-> S_24),
S_165 = (drop-> S_166|load-> S_167),
S_166 = (bCast-> S_168|correct-> S_143),
S_167 = (bCast-> S_170|correct-> S_171),
S_168 = (drop-> S_22|load-> S_24),
S_170 = (e-> S_262),
S_171 = (e-> S_240),
S_172 = (n-> S_36),
S_173 = (w-> S_36),
S_174 = (drop-> S_174|load-> S_147),
S_175 = (w-> S_266),
S_181 = (bCast-> S_182|correct-> S_183),
S_182 = (n-> S_58),
S_183 = (n-> S_152),
S_184 = (bCast-> S_185|correct-> S_186),
S_185 = (n-> S_66),
S_186 = (n-> S_181),
S_190 = (bCast-> S_191|correct-> S_192),
S_191 = (w-> S_138),
S_192 = (w-> S_184),
S_196 = (bCast-> S_197|correct-> S_198),
S_197 = (w-> S_132),
S_198 = (w-> S_190),
S_224 = (w-> S_196),
S_225 = (e-> S_108),
S_226 = (w-> S_121),
S_231 = (w-> S_134),
S_233 = (n-> S_136),
S_234 = (n-> S_125),
S_236 = (e-> S_175),
S_237 = (drop-> S_146|load-> S_147),
S_240 = (bCast-> S_244|correct-> S_245),
S_244 = (e-> S_246),
S_245 = (e-> S_247),
S_246 = (bCast-> S_319|correct-> S_252),
S_247 = (bCast-> S_251|correct-> S_252),
S_251 = (e-> S_321),
S_252 = (e-> S_315),
S_262 = (bCast-> S_265|correct-> S_245),
S_265 = (w-> S_266),
S_266 = (drop-> S_270|load-> S_271),
S_267 = (w-> S_268),
S_268 = (n-> S_266),
S_269 = (w-> S_175),
S_270 = (drop-> S_270|load-> S_271),
S_271 = (e-> S_175),
S_278 = (unload-> S_283),
S_280 = (w-> S_267),
S_283 = (w-> S_48),
S_301 = (bCast-> S_320|correct-> S_307),
S_302 = (bCast-> S_306|correct-> S_307),
S_306 = (s-> S_338),
S_307 = (s-> S_325),
S_311 = (bCast-> S_318|correct-> S_314),
S_312 = (bCast-> S_313|correct-> S_314),
S_313 = (s-> S_301),
S_314 = (s-> S_302),
S_315 = (bCast-> S_316|correct-> S_317),
S_316 = (s-> S_311),
S_317 = (s-> S_312),
S_318 = (w-> S_280),
S_319 = (w-> S_175),
S_320 = (s-> S_278),
S_321 = (bCast-> S_322|correct-> S_317),
S_322 = (w-> S_269),
S_325 = (bCast-> S_326|correct-> S_327),
S_326 = (unload-> S_328),
S_327 = (unload-> S_329),
S_328 = (bCast-> S_120|correct-> S_116),
S_329 = (bCast-> S_115|correct-> S_116),
S_338 = (bCast-> S_339|correct-> S_327),
S_339 = (unload-> S_283).
// tests
equals FATAL_ROBOT_REALIZABLE(STRAT, STRAT_p).
