hready   [E]   boolean
hbusreq   [E]   array 0..1 of boolean
hlock   [E]   array 0..1 of boolean
hburst   [E]   array 0..1 of boolean
hmaster   [S]   array 0..0 of boolean
hmastlock   [S]   boolean
start   [S]   boolean
decide   [S]   boolean
hlocked   [S]   boolean
hgrant   [S]   array 0..1 of boolean
stateA1   [S]   array 0..1 of boolean
stateG2   [S]   array 0..1 of boolean
stateG3   [S]   array 0..2 of boolean
stateG10   [S]   array 1..1 of boolean

InitEnv_0   !hready   [G]
InitEnv_1   forall i in {0:1}: !hbusreq[i]   [G]
InitEnv_2   forall i in {0:1}: !hlock[i]   [G]
InitEnv_3   forall i in {0,1}: !hburst[i]   [G]
TransEnv_0   forall i in {0:1}: always ( hlock[i] -> hbusreq[i] )   [A]
FairEnv_0   always eventually! (!stateA1[0] & !stateA1[1])   [G]
FairEnv_1   always eventually! (hready)   [G]
InitSys_0   forall i in {0:0}: !hmaster[i]   [G]
InitSys_1   !hmastlock   [G]
InitSys_2   start   [G]
InitSys_3   decide   [G]
InitSys_4   !hlocked   [G]
InitSys_5   hgrant[0] & forall i in {1:1}: !hgrant[i]   [G]
InitSys_6   forall i in {0:1}: !stateA1[i]   [G]
InitSys_7   forall i in {0:1}: !stateG2[i]   [G]
InitSys_8   forall i in {0:2}: !stateG3[i]   [G]
InitSys_9   forall i in {1:1}: !stateG10[i]   [G]
TransSys_0   always ((!stateA1[0] & !stateA1[1]& ((!hmastlock) | (hburst[0] | hburst[1]))) -> X(!stateA1[0] & !stateA1[1]))   [G]
TransSys_1   always ((!stateA1[0] & !stateA1[1] & ((hmastlock) & (!hmaster[0]) & (!hburst[0] & !hburst[1]))) -> X(stateA1[0] & !stateA1[1]))   [G]
TransSys_2   always ((stateA1[0] & !stateA1[1]&  hbusreq[0]) -> X(stateA1[0] & !stateA1[1]))   [G]
TransSys_3   always ((stateA1[0] & !stateA1[1]&  !hbusreq[0]) -> X(!stateA1[0] & !stateA1[1]))   [G]
TransSys_4   always ((!stateA1[0] & !stateA1[1] & ((hmastlock) & (hmaster[0]) & (!hburst[0] & !hburst[1]))) -> X(!stateA1[0] & stateA1[1]))   [G]
TransSys_5   always ((!stateA1[0] & stateA1[1]&  hbusreq[1]) -> X(!stateA1[0] & stateA1[1]))   [G]
TransSys_6   always ((!stateA1[0] & stateA1[1]&  !hbusreq[1]) -> X(!stateA1[0] & !stateA1[1]))   [G]
TransSys_7   always ((!hready) -> X(!start))   [G]
TransSys_8   always (( !stateG2[0] & (!hmastlock)) -> X !stateG2[0])   [G]
TransSys_9   always (( !stateG2[0] & (!start)) -> X !stateG2[0])   [G]
TransSys_10   always (( !stateG2[0] & hburst[0]) -> X !stateG2[0])   [G]
TransSys_11   always (( !stateG2[0] & hburst[1]) -> X !stateG2[0])   [G]
TransSys_12   always (( !stateG2[0] & !(!hmaster[0])) -> X !stateG2[0])   [G]
TransSys_13   always (( !stateG2[0] & (hmastlock) & (start) & !hburst[0] & !hburst[1] & (!hmaster[0])) -> X stateG2[0])   [G]
TransSys_14   always (( stateG2[0] & (!start) &  hbusreq[0]) -> X stateG2[0])   [G]
TransSys_15   always (( stateG2[0] & start) -> X FALSE)   [G]
TransSys_16   always (( stateG2[0] & (!start) &  !hbusreq[0]) -> X !stateG2[0])   [G]
TransSys_17   always (( !stateG2[1] & (!hmastlock)) -> X !stateG2[1])   [G]
TransSys_18   always (( !stateG2[1] & (!start)) -> X !stateG2[1])   [G]
TransSys_19   always (( !stateG2[1] & hburst[0]) -> X !stateG2[1])   [G]
TransSys_20   always (( !stateG2[1] & hburst[1]) -> X !stateG2[1])   [G]
TransSys_21   always (( !stateG2[1] & !(hmaster[0])) -> X !stateG2[1])   [G]
TransSys_22   always (( !stateG2[1] & (hmastlock) & (start) & !hburst[0] & !hburst[1] & (hmaster[0])) -> X stateG2[1])   [G]
TransSys_23   always (( stateG2[1] & (!start) &  hbusreq[1]) -> X stateG2[1])   [G]
TransSys_24   always (( stateG2[1] & start) -> X FALSE)   [G]
TransSys_25   always (( stateG2[1] & (!start) &  !hbusreq[1]) -> X !stateG2[1])   [G]
TransSys_26   always ((!stateG3[0] & !stateG3[1] & !stateG3[2] &  ((!hmastlock) | (!start) | (hburst[0] | !hburst[1]))) -> X(!stateG3[0] & !stateG3[1] & !stateG3[2]))   [G]
TransSys_27   always ((!stateG3[0] & !stateG3[1] & !stateG3[2] &  ((hmastlock) & (start) & (!hburst[0] & hburst[1]) & (!hready))) -> X(stateG3[0] & !stateG3[1] & !stateG3[2]))   [G]
TransSys_28   always ((!stateG3[0] & !stateG3[1] & !stateG3[2] &  ((hmastlock) & (start) & (!hburst[0] & hburst[1]) & (hready))) -> X(!stateG3[0] & stateG3[1] & !stateG3[2]))   [G]
TransSys_29   always ((stateG3[0] & !stateG3[1] & !stateG3[2] & ((!start) & (!hready))) -> X(stateG3[0] & !stateG3[1] & !stateG3[2]))   [G]
TransSys_30   always ((stateG3[0] & !stateG3[1] & !stateG3[2] & ((!start) & (hready))) -> X(!stateG3[0] & stateG3[1] & !stateG3[2]))   [G]

TransSys_31   always ((stateG3[0] & !stateG3[1] & !stateG3[2] & ((start))) -> X FALSE)   [G]
TransSys_32   always ((!stateG3[0] & stateG3[1] & !stateG3[2] & ((!start) & (!hready))) -> X(!stateG3[0] & stateG3[1] & !stateG3[2]))   [G]
TransSys_33   always ((!stateG3[0] & stateG3[1] & !stateG3[2] & ((!start) & (hready))) -> X(stateG3[0] & stateG3[1] & !stateG3[2]))   [G]
TransSys_34   always ((!stateG3[0] & stateG3[1] & !stateG3[2] & ((start))) -> X FALSE)   [G]
TransSys_35   always ((stateG3[0] & stateG3[1] & !stateG3[2] & ((!start) & (!hready))) -> X(stateG3[0] & stateG3[1] & !stateG3[2]))   [G]
TransSys_36   always ((stateG3[0] & stateG3[1] & !stateG3[2] & ((!start) & (hready))) -> X(!stateG3[0] & !stateG3[1] & stateG3[2]))   [G]
TransSys_37   always ((stateG3[0] & stateG3[1] & !stateG3[2] & ((start))) -> X FALSE)   [G]
TransSys_38   always ((!stateG3[0] & !stateG3[1] & stateG3[2] & ((!start) & (!hready))) -> X(!stateG3[0] & !stateG3[1] & stateG3[2]))   [G]
TransSys_39   always ((!stateG3[0] & !stateG3[1] & stateG3[2] & ((!start) & (hready))) -> X(!stateG3[0] & !stateG3[1] & !stateG3[2]))   [G]
TransSys_40   always ((!stateG3[0] & !stateG3[1] & stateG3[2] & ((start))) -> X FALSE)   [G]
TransSys_41   always ((hready) -> ((hgrant[0]=1) <-> X(!hmaster[0])))   [G]
TransSys_42   always ((hready) -> ((hgrant[1]=1) <-> X(hmaster[0])))   [G]
TransSys_43   always ((hready) -> (!hlocked <-> X(!hmastlock)))   [G]
TransSys_44   always (X(!start) -> ((!hmaster[0]) <-> (X(!hmaster[0]))))   [G]
TransSys_45   always (X(!start) -> ((hmaster[0]) <-> (X(hmaster[0]))))   [G]
TransSys_46   always (((X(!start))) -> ((hmastlock) <-> X(hmastlock)))   [G]
TransSys_47   always ((decide=1 & hlock[0] & X hgrant[0]) -> X(hlocked=1))   [G]
TransSys_48   always ((decide=1 & !hlock[0] & X hgrant[0]) -> X(!hlocked))   [G]
TransSys_49   always ((decide=1 & hlock[1] & X hgrant[1]) -> X(hlocked=1))   [G]
TransSys_50   always ((decide=1 & !hlock[1] & X hgrant[1]) -> X(!hlocked))   [G]
TransSys_51   always ((decide=1 & !hbusreq[0] & !hbusreq[1]) -> X hgrant[0])   [G]
TransSys_52   always ((!decide)->(((!hgrant[0]) <-> X(!hgrant[0]))))   [G]
TransSys_53   always ((!decide)->(((!hgrant[1]) <-> X(!hgrant[1]))))   [G]
TransSys_54   always ((!decide) -> (!hlocked <-> X(!hlocked)))   [G]
TransSys_55   always (( !stateG10[1] & (( hgrant[1] |  hbusreq[1]))) -> X !stateG10[1])   [G]
TransSys_56   always (( !stateG10[1] & ( !hgrant[1] &  !hbusreq[1])) -> X stateG10[1])   [G]
TransSys_57   always (( stateG10[1] & ( !hgrant[1] &  !hbusreq[1])) -> X stateG10[1])   [G]
TransSys_58   always (( stateG10[1] & (( hgrant[1]) &  !hbusreq[1])) -> X FALSE)   [G]
TransSys_59   always (( stateG10[1] &  hbusreq[1]) -> X !stateG10[1])   [G]
FairSys_0   always eventually!  !stateG2[0]   [G]
FairSys_1   always eventually!  !stateG2[1]   [G]
FairSys_2   always eventually! (!stateG3[0] & !stateG3[1] & !stateG3[2])   [G]
FairSys_3   always eventually! ((!hmaster[0]) | !hbusreq[0])   [G]
FairSys_4   always eventually! ((hmaster[0]) | !hbusreq[1])   [G]

