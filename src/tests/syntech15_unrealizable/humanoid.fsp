//HumanoidLTL_458_Humanoid_fixed_unrealizable
/*
obstacle 0 clear 1 blocked
xmove1	xmove0	value
0	0	fwd
0	1	bwd
1	0	left
1	1	right
motor2	motor1	motor0	value
0	0	0	fwd
0	0	1	bwd
0	1	0	turn_fwd
0	1	1	turn_bwd
1	0	0	calib_turn
1	0	1	calib_fwd
head1	head0	value
0	0	fwd
0	1	bwd
1	0	stop
*/

set Global_Alphabet = {}
set Controllable_Alphabet = {}
set Global_Signals	= {obstacle, inputMove1, inputMove0, outputMove1, outputMove0, leftMotor2, leftMotor1, leftMotor0, rightMotor2, rightMotor1, rightMotor0, head}
set Output_Signals	= {outputMove1, outputMove0, leftMotor2, leftMotor1, leftMotor0, rightMotor2, rightMotor1, rightMotor0, head}
order	= {}
ltl sys theta Init_Buffer_s in HUMAN =(!outputMove1 && !outputMove0 && !leftMotor2 && !leftMotor1 && !leftMotor0 && !rightMotor2 && !rightMotor1 && !rightMotor0 && !head).
ltl sys theta Init_Buffer_e in HUMAN =(!obstacle && !inputMove1 && !inputMove0).

ltl sys rho G_X in HUMAN = [](((!inputMove0 && !inputMove1) && obstacle) -> ((!outputMove0 && outputMove1) && (!leftMotor0 && !leftMotor1 && leftMotor2) && (!rightMotor0 && !rightMotor1 && rightMotor2))).

ltl sys rho G_X in HUMAN = [](((inputMove0 && !inputMove1) && !obstacle) -> (((!outputMove0 && !outputMove1) && (!leftMotor0 && !leftMotor1 && !leftMotor2) && (rightMotor0 && !rightMotor1 && !rightMotor2)))).

ltl sys rho G_X in HUMAN = [] (((!inputMove0 && !inputMove1) && !obstacle ) -> ((!leftMotor0 && !leftMotor1 && !leftMotor2) && (!rightMotor0 && !rightMotor1 && !rightMotor2))).

ltl sys rho G_X in HUMAN = []((obstacle) -> !((!outputMove0 && !outputMove1))).
////////////////////////////	

ltl sys rho G_X in HUMAN = [](((!inputMove0 && inputMove1)) <-> ((outputMove0 && outputMove1))).

ltl sys rho G_X in HUMAN = [](((!inputMove0 && inputMove1)) -> ((!leftMotor0 && !leftMotor1 && !leftMotor2) && (!rightMotor0 && rightMotor1 && !rightMotor2))).
	
ltl sys rho G_X in HUMAN = [](((inputMove0 && inputMove1)) -> ((leftMotor0 && !leftMotor1 && !leftMotor2) && (rightMotor0 && rightMotor1 && !rightMotor2))).
	
ltl sys rho G_X in HUMAN = [](!((!inputMove0 && inputMove1) || (inputMove0 && inputMove1)) -> !((leftMotor0 && leftMotor1 && !leftMotor2) || (rightMotor0 && rightMotor1 && !rightMotor2) ||(!leftMotor0 && leftMotor1 && !leftMotor2) && (!rightMotor0 && rightMotor1 && !rightMotor2))).
	
ltl sys rho G_X in HUMAN = [](((!inputMove0 && inputMove1) || (inputMove0 && inputMove1)) -> (!head)).
	
ltl sys rho G_X in HUMAN = [](((inputMove0 && inputMove1) && !(!outputMove0 && outputMove1)) -> ((leftMotor0 && !leftMotor1 && leftMotor2) && (rightMotor0 
&& !rightMotor1 && rightMotor2))).

ltl sys rho G_X in HUMAN = [] (((inputMove0 && inputMove1) && !obstacle) -> ((!outputMove0 && !outputMove1))).

ltl fluent DUMMY = (obstacle || !obstacle).

|f| ENV =(HUMAN).
|gr1| <{DUMMY}><{DUMMY}> STRAT = ENV.
ENV >> "/tmp/human.rep".
STRAT >> "/tmp/human_strat.rep".

