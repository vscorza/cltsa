//GenBuf example taken from Synthesis of Reactive(1) Designs 2 senders
set Global_Alphabet = {n,s,e,w,load,unload,stall,releaseNorth, releaseSouth}
set Controllable_Alphabet = {n,s,e,w,load,unload}

order 				= {}
//set Moves = {n,s,e,w}
//set Actions = {load,unload}
//set A = {Moves,Actions}
const Min = 1 //this must always be odd
const Max = 18
range Pos = Min..Max

//Concrete
MAZE = M[1][1],
M[r:Pos][c:Pos] = ( 
				when(r > Min) n->M[r-1][c] 
				| when(r < Max) s->M[r+1][c]
				| when(c > Min) w->M[r][c-1]
				| when(c < Max) e->M[r][c+1]
				| when((r == Max) * (c == Max)) load->M[r][c]
				| when((r == Min) * (c == Min)) unload->M[r][c]
				| when((r == ((Max - Min)/2))) stall -> M[r][c]
				| when((r > Min) * (r == ((Max - Min)/2))) <n, releaseNorth>->M[r-1][c] 
				| when((r < Max) * (r == ((Max - Min)/2))) <s, releaseSouth>->M[r+1][c]		
).


ARM = (load->unload->ARM).

||C = (MAZE ||_c ARM).

|f|ROBOT_EXPLORE = (MAZE || ARM).

fluent F_Load = <load, {unload,n,s,e,w,stall,releaseNorth, releaseSouth}>
fluent F_Unload = <unload, {load,n,s,e,w,stall,releaseNorth, releaseSouth}>
fluent F_ReleaseNorth = <releaseNorth,{unload,load,n,s,e,w,stall,releaseSouth}> initially 1
fluent F_ReleaseSouth = <releaseSouth,{unload,load,n,s,e,w,stall,releaseNorth}> initially 1

ltl fluent A_True = (dummy || !dummy).
|gr1| <{A_True}><{F_Load, F_Unload}> STRAT = ROBOT_EXPLORE.

STRAT >> "/home/mariano/code/henos-automata/src/results/exploration_robot_18_strat_missing_assumption.rep".
